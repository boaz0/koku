# Generated by Django 2.2.13 on 2020-06-17 22:54
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [("reporting", "0119_copy_data_ocplineitemusage_daily_summary")]

    operations = [
        migrations.RunSQL(
            """
-- ========================================
--    rereate the materialized views to connect them to the partitioned table
-- ========================================
CREATE materialized VIEW reporting_ocp_cost_summary AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.supplementary_monthly_cost) AS supplementary_monthly_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_monthly_cost) AS infrastructure_monthly_cost,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE (reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date)
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_cost_summary
    ON reporting_ocp_cost_summary USING btree (usage_start, cluster_id, cluster_alias, source_uuid) ;

CREATE materialized VIEW reporting_ocp_cost_summary_by_node AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias, reporting_ocpusagelineitem_daily_summary.node) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       reporting_ocpusagelineitem_daily_summary.node,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.supplementary_monthly_cost) AS supplementary_monthly_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_monthly_cost) AS infrastructure_monthly_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_project_markup_cost) AS infrastructure_project_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_project_raw_cost) AS infrastructure_project_raw_cost,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE (reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date)
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.node,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_cost_summary_by_node
    ON reporting_ocp_cost_summary_by_node USING btree (usage_start, cluster_id, cluster_alias, node, source_uuid) ;

CREATE materialized VIEW reporting_ocp_cost_summary_by_project AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias, reporting_ocpusagelineitem_daily_summary.namespace) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       reporting_ocpusagelineitem_daily_summary.namespace,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_project_raw_cost) AS infrastructure_project_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_project_markup_cost) AS infrastructure_project_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.supplementary_monthly_cost) AS supplementary_monthly_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_monthly_cost) AS infrastructure_monthly_cost,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE (reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date)
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.namespace,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_cost_summary_by_project
    ON reporting_ocp_cost_summary_by_project USING btree (usage_start, cluster_id, cluster_alias, namespace, source_uuid) ;

CREATE materialized VIEW reporting_ocp_pod_summary AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       max((reporting_ocpusagelineitem_daily_summary.data_source)::text) AS data_source,
       array_agg(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_ids,
       count(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_count,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.pod_usage_cpu_core_hours) AS pod_usage_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_request_cpu_core_hours) AS pod_request_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_limit_cpu_core_hours) AS pod_limit_cpu_core_hours,
       max(reporting_ocpusagelineitem_daily_summary.cluster_capacity_cpu_core_hours) AS cluster_capacity_cpu_core_hours,
       max(reporting_ocpusagelineitem_daily_summary.total_capacity_cpu_core_hours) AS total_capacity_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_usage_memory_gigabyte_hours) AS pod_usage_memory_gigabyte_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_request_memory_gigabyte_hours) AS pod_request_memory_gigabyte_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_limit_memory_gigabyte_hours) AS pod_limit_memory_gigabyte_hours,
       max(reporting_ocpusagelineitem_daily_summary.total_capacity_memory_gigabyte_hours) AS total_capacity_memory_gigabyte_hours,
       max(reporting_ocpusagelineitem_daily_summary.cluster_capacity_memory_gigabyte_hours) AS cluster_capacity_memory_gigabyte_hours,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE ((reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date) AND ((reporting_ocpusagelineitem_daily_summary.data_source)::text = 'Pod'::text))
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_pod_summary
    ON reporting_ocp_pod_summary USING btree (usage_start, cluster_id, cluster_alias, source_uuid) ;

CREATE materialized VIEW reporting_ocp_pod_summary_by_project AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias, reporting_ocpusagelineitem_daily_summary.namespace) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       reporting_ocpusagelineitem_daily_summary.namespace,
       max((reporting_ocpusagelineitem_daily_summary.data_source)::text) AS data_source,
       array_agg(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_ids,
       count(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_count,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.pod_usage_cpu_core_hours) AS pod_usage_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_request_cpu_core_hours) AS pod_request_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_limit_cpu_core_hours) AS pod_limit_cpu_core_hours,
       max(reporting_ocpusagelineitem_daily_summary.cluster_capacity_cpu_core_hours) AS cluster_capacity_cpu_core_hours,
       max(reporting_ocpusagelineitem_daily_summary.total_capacity_cpu_core_hours) AS total_capacity_cpu_core_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_usage_memory_gigabyte_hours) AS pod_usage_memory_gigabyte_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_request_memory_gigabyte_hours) AS pod_request_memory_gigabyte_hours,
       sum(reporting_ocpusagelineitem_daily_summary.pod_limit_memory_gigabyte_hours) AS pod_limit_memory_gigabyte_hours,
       max(reporting_ocpusagelineitem_daily_summary.total_capacity_memory_gigabyte_hours) AS total_capacity_memory_gigabyte_hours,
       max(reporting_ocpusagelineitem_daily_summary.cluster_capacity_memory_gigabyte_hours) AS cluster_capacity_memory_gigabyte_hours,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE ((reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date) AND ((reporting_ocpusagelineitem_daily_summary.data_source)::text = 'Pod'::text))
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.namespace,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_pod_summary_by_project
    ON reporting_ocp_pod_summary_by_project USING btree (usage_start, cluster_id, cluster_alias, namespace, source_uuid) ;

CREATE materialized VIEW reporting_ocp_volume_summary AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       max((reporting_ocpusagelineitem_daily_summary.data_source)::text) AS data_source,
       array_agg(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_ids,
       count(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_count,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.persistentvolumeclaim_usage_gigabyte_months) AS persistentvolumeclaim_usage_gigabyte_months,
       sum(reporting_ocpusagelineitem_daily_summary.volume_request_storage_gigabyte_months) AS volume_request_storage_gigabyte_months,
       sum(reporting_ocpusagelineitem_daily_summary.persistentvolumeclaim_capacity_gigabyte_months) AS persistentvolumeclaim_capacity_gigabyte_months,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE ((reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date) AND ((reporting_ocpusagelineitem_daily_summary.data_source)::text = 'Storage'::text))
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_volume_summary
    ON reporting_ocp_volume_summary USING btree (usage_start, cluster_id, cluster_alias, source_uuid) ;

CREATE materialized VIEW reporting_ocp_volume_summary_by_project AS
SELECT row_number() OVER (ORDER BY reporting_ocpusagelineitem_daily_summary.usage_start, reporting_ocpusagelineitem_daily_summary.cluster_id, reporting_ocpusagelineitem_daily_summary.cluster_alias, reporting_ocpusagelineitem_daily_summary.namespace) AS id,
       reporting_ocpusagelineitem_daily_summary.usage_start,
       reporting_ocpusagelineitem_daily_summary.usage_start AS usage_end,
       reporting_ocpusagelineitem_daily_summary.cluster_id,
       reporting_ocpusagelineitem_daily_summary.cluster_alias,
       reporting_ocpusagelineitem_daily_summary.namespace,
       max((reporting_ocpusagelineitem_daily_summary.data_source)::text) AS data_source,
       array_agg(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_ids,
       count(DISTINCT reporting_ocpusagelineitem_daily_summary.resource_id) AS resource_count,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.supplementary_usage_cost ->> 'storage'::text))::numeric)) AS supplementary_usage_cost,
       json_build_object('cpu', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'cpu'::text))::numeric), 'memory', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'memory'::text))::numeric), 'storage', sum(((reporting_ocpusagelineitem_daily_summary.infrastructure_usage_cost ->> 'storage'::text))::numeric)) AS infrastructure_usage_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_raw_cost) AS infrastructure_raw_cost,
       sum(reporting_ocpusagelineitem_daily_summary.infrastructure_markup_cost) AS infrastructure_markup_cost,
       sum(reporting_ocpusagelineitem_daily_summary.persistentvolumeclaim_usage_gigabyte_months) AS persistentvolumeclaim_usage_gigabyte_months,
       sum(reporting_ocpusagelineitem_daily_summary.volume_request_storage_gigabyte_months) AS volume_request_storage_gigabyte_months,
       sum(reporting_ocpusagelineitem_daily_summary.persistentvolumeclaim_capacity_gigabyte_months) AS persistentvolumeclaim_capacity_gigabyte_months,
       reporting_ocpusagelineitem_daily_summary.source_uuid
  FROM reporting_ocpusagelineitem_daily_summary
 WHERE ((reporting_ocpusagelineitem_daily_summary.usage_start >= (date_trunc('month'::text, (now() - '1 mon'::interval)))::date) AND ((reporting_ocpusagelineitem_daily_summary.data_source)::text = 'Storage'::text))
 GROUP BY reporting_ocpusagelineitem_daily_summary.usage_start,
          reporting_ocpusagelineitem_daily_summary.cluster_id,
          reporting_ocpusagelineitem_daily_summary.cluster_alias,
          reporting_ocpusagelineitem_daily_summary.namespace,
          reporting_ocpusagelineitem_daily_summary.source_uuid;

CREATE UNIQUE INDEX ocp_volume_summary_by_project
    ON reporting_ocp_volume_summary_by_project USING btree (usage_start, cluster_id, cluster_alias, namespace, source_uuid) ;

REFRESH MATERIALIZED VIEW reporting_ocp_cost_summary WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_cost_summary_by_node WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_cost_summary_by_project WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_pod_summary WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_pod_summary_by_project WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_volume_summary WITH DATA;

REFRESH MATERIALIZED VIEW reporting_ocp_volume_summary_by_project WITH DATA;
            """
        )
    ]
